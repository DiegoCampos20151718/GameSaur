{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\gamesaur\\\\components\\\\AuthService.tsx\",\n  _this = this;\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar AuthContext = createContext(undefined);\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    token = _useState4[0],\n    setToken = _useState4[1];\n  useEffect(function () {\n    var bootstrapAsync = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var _userToken;\n        var userToken = null;\n        try {\n          userToken = yield AsyncStorage.getItem('authToken');\n        } catch (e) {}\n        setIsLoggedIn(!!userToken);\n        setToken((_userToken = userToken) != null ? _userToken : '');\n      });\n      return function bootstrapAsync() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    bootstrapAsync();\n  }, []);\n  var login = function () {\n    var _ref3 = _asyncToGenerator(function* (TokenData) {\n      yield AsyncStorage.setItem('authToken', TokenData);\n      setToken(TokenData);\n      setIsLoggedIn(true);\n    });\n    return function login(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      yield AsyncStorage.removeItem('authToken');\n      setIsLoggedIn(false);\n      setToken('');\n    });\n    return function logout() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      login: login,\n      logout: logout,\n      token: token\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, _this);\n};\nexport var useAuth = function useAuth() {\n  var context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\nexport var useToken = function useToken() {\n  var context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useToken must be used within an AuthProvider');\n  }\n  return context.token;\n};\nexport var AuthService = function () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n  }\n  _createClass(AuthService, null, [{\n    key: \"setToken\",\n    value: function () {\n      var _setToken = _asyncToGenerator(function* (token) {\n        yield AsyncStorage.setItem('authToken', token);\n      });\n      function setToken(_x2) {\n        return _setToken.apply(this, arguments);\n      }\n      return setToken;\n    }()\n  }, {\n    key: \"getToken\",\n    value: function () {\n      var _getToken = _asyncToGenerator(function* () {\n        return yield AsyncStorage.getItem('authToken');\n      });\n      function getToken() {\n        return _getToken.apply(this, arguments);\n      }\n      return getToken;\n    }()\n  }, {\n    key: \"removeToken\",\n    value: function () {\n      var _removeToken = _asyncToGenerator(function* () {\n        yield AsyncStorage.removeItem('authToken');\n      });\n      function removeToken() {\n        return _removeToken.apply(this, arguments);\n      }\n      return removeToken;\n    }()\n  }]);\n  return AuthService;\n}();\nexport default AuthService;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","AsyncStorage","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","_useState3","_useState4","token","setToken","bootstrapAsync","_ref2","_asyncToGenerator","_userToken","userToken","getItem","e","apply","arguments","login","_ref3","TokenData","setItem","_x","logout","_ref4","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_this","useAuth","context","Error","useToken","AuthService","_classCallCheck","_createClass","key","_setToken","_x2","_getToken","getToken","_removeToken","removeToken"],"sources":["C:/xampp/htdocs/gamesaur/components/AuthService.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\ninterface AuthContextType {\r\n  isLoggedIn: boolean;\r\n  login: (TokenData: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  token: string;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\r\n  const [token, setToken] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    const bootstrapAsync = async () => {\r\n      let userToken: string | null = null;\r\n      try {\r\n        userToken = await AsyncStorage.getItem('authToken');\r\n      } catch (e) {\r\n        // Restore token failed\r\n      }\r\n      setIsLoggedIn(!!userToken);\r\n      setToken(userToken ?? '');\r\n    };\r\n\r\n    bootstrapAsync();\r\n  }, []);\r\n\r\n  const login = async (TokenData: string) => {\r\n    await AsyncStorage.setItem('authToken', TokenData);\r\n    setToken(TokenData);\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const logout = async () => {\r\n    await AsyncStorage.removeItem('authToken');\r\n    setIsLoggedIn(false);\r\n    setToken('');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn, login, logout, token }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const useToken = (): string => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useToken must be used within an AuthProvider');\r\n  }\r\n  return context.token;\r\n};\r\n\r\nexport class AuthService {\r\n  static async setToken(token: string): Promise<void> {\r\n    await AsyncStorage.setItem('authToken', token);\r\n  }\r\n\r\n  static async getToken(): Promise<string | null> {\r\n    return await AsyncStorage.getItem('authToken');\r\n  }\r\n\r\n  static async removeToken(): Promise<void> {\r\n    await AsyncStorage.removeItem('authToken');\r\n  }\r\n}\r\n\r\nexport default AuthService;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}