{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\gamesaur\\\\components\\\\Login.tsx\",\n  _this = this;\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var validateEmail = function validateEmail(email) {\n    var re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  };\n  var authenticateUser = function () {\n    var _ref2 = _asyncToGenerator(function* (email, password) {\n      try {\n        var response = yield fetch('http://localhost/geingeemu/public/api/login', {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email,\n            password: password\n          })\n        });\n        var json = yield response.json();\n        if (json.success) {\n          navigation.navigate('Home');\n        } else {\n          Alert.alert('Login Failed', json.message || 'Invalid credentials');\n        }\n      } catch (error) {\n        console.error('Login Error:', error);\n        Alert.alert('Login Error', 'Unable to connect to the server');\n      }\n    });\n    return function authenticateUser(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleLogin = function handleLogin() {\n    if (!email || !password) {\n      Alert.alert('Error', 'Please fill in all fields');\n      return;\n    }\n    if (!validateEmail(email)) {\n      Alert.alert('Error', 'Please enter a valid email');\n      return;\n    }\n    authenticateUser(email, password);\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Image, {\n      source: require('../assets/logo.png'),\n      style: styles.logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this), _jsxDEV(Text, {\n      style: styles.appName,\n      children: \"APP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this), _jsxDEV(Text, {\n      style: styles.loginText,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"e-mail\",\n      placeholderTextColor: \"#9B9B9B\",\n      value: email,\n      onChangeText: setEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      placeholderTextColor: \"#9B9B9B\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this), _jsxDEV(TouchableOpacity, {\n      style: styles.loginButton,\n      onPress: handleLogin,\n      children: _jsxDEV(Text, {\n        style: styles.loginButtonText,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.keepSessionContainer,\n      children: _jsxDEV(TouchableOpacity, {\n        children: _jsxDEV(Text, {\n          style: styles.keepSessionText,\n          children: \"Keep open the session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, _this), _jsxDEV(TouchableOpacity, {\n      children: _jsxDEV(Text, {\n        style: styles.signUpText,\n        onPress: function onPress() {\n          return navigation.navigate('Register');\n        },\n        children: \"Don't have an account? Click here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    marginBottom: 30\n  },\n  appName: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#007AFF',\n    marginBottom: 30\n  },\n  loginText: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#007AFF',\n    marginBottom: 30\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    borderColor: '#007AFF',\n    borderWidth: 2,\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    marginBottom: 20,\n    fontSize: 18\n  },\n  loginButton: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#007AFF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    marginBottom: 20\n  },\n  loginButtonText: {\n    color: '#FFFFFF',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  keepSessionContainer: {\n    flexDirection: 'row',\n    marginBottom: 20\n  },\n  keepSessionText: {\n    color: '#007AFF',\n    fontSize: 16\n  },\n  signUpText: {\n    color: '#007AFF',\n    fontSize: 16,\n    textDecorationLine: 'underline'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","TextInput","TouchableOpacity","Image","Alert","jsxDEV","_jsxDEV","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","validateEmail","re","test","authenticateUser","_ref2","_asyncToGenerator","response","fetch","method","headers","body","JSON","stringify","json","success","navigate","alert","message","error","console","_x","_x2","apply","arguments","handleLogin","style","styles","container","children","source","require","logo","fileName","_jsxFileName","lineNumber","columnNumber","_this","appName","loginText","input","placeholder","placeholderTextColor","value","onChangeText","secureTextEntry","loginButton","onPress","loginButtonText","keepSessionContainer","keepSessionText","signUpText","create","flex","backgroundColor","alignItems","justifyContent","paddingHorizontal","width","height","marginBottom","fontSize","fontWeight","color","borderColor","borderWidth","borderRadius","flexDirection","textDecorationLine"],"sources":["C:/xampp/htdocs/gamesaur/components/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, Text, TextInput, TouchableOpacity, Image, Alert } from 'react-native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport Registration from './Register';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const validateEmail = (email) => {\r\n    const re = /\\S+@\\S+\\.\\S+/;\r\n    return re.test(email);\r\n  };\r\n\r\n  const authenticateUser = async (email, password) => {\r\n    try {\r\n      const response = await fetch('http://localhost/geingeemu/public/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          email: email,\r\n          password: password,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      if (json.success) {\r\n        // Navigate to Home screen or store token in AsyncStorage\r\n        navigation.navigate('Home');\r\n      } else {\r\n        // Handle failed login\r\n        Alert.alert('Login Failed', json.message || 'Invalid credentials');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login Error:', error);\r\n      Alert.alert('Login Error', 'Unable to connect to the server');\r\n    }\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    if (!email || !password) {\r\n      Alert.alert('Error', 'Please fill in all fields');\r\n      return;\r\n    }\r\n    if (!validateEmail(email)) {\r\n      Alert.alert('Error', 'Please enter a valid email');\r\n      return;\r\n    }\r\n    // Asynchronous authentication\r\n    authenticateUser(email, password);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image source={require('../assets/logo.png')} style={styles.logo} />\r\n      <Text style={styles.appName}>APP</Text>\r\n      <Text style={styles.loginText}>Login</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"e-mail\"\r\n        placeholderTextColor=\"#9B9B9B\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        placeholderTextColor=\"#9B9B9B\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n      />\r\n      <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>\r\n        <Text style={styles.loginButtonText}>Login</Text>\r\n      </TouchableOpacity>\r\n      <View style={styles.keepSessionContainer}>\r\n        <TouchableOpacity>\r\n          <Text style={styles.keepSessionText}>Keep open the session</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <TouchableOpacity>\r\n        <Text style={styles.signUpText} onPress={() => navigation.navigate('Register')}>\r\n          Don't have an account? Click here\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5F5F5',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 20, // Added padding for overall screen\r\n  },\r\n  logo: {\r\n    width: 100, // Adjusted to larger size based on the image\r\n    height: 100, // Adjusted to larger size based on the image\r\n    marginBottom: 30,\r\n  },\r\n  appName: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#007AFF',\r\n    marginBottom: 30,\r\n  },\r\n  loginText: {\r\n    fontSize: 28, // Made larger based on the image\r\n    fontWeight: 'bold',\r\n    color: '#007AFF', // Assuming the color matches the logo\r\n    marginBottom: 30,\r\n  },\r\n  input: {\r\n    width: '100%', // Made full-width based on the image\r\n    height: 50, // Increased height for better touch area\r\n    borderColor: '#007AFF',\r\n    borderWidth: 2, // Made border thicker\r\n    borderRadius: 10, // Increased border radius\r\n    paddingHorizontal: 15, // Increased padding for text inside input\r\n    marginBottom: 20, // Increased space between inputs\r\n    fontSize: 18, // Larger font for better readability\r\n  },\r\n  loginButton: {\r\n    width: '100%', // Full-width button\r\n    height: 50, // Increased height for a bigger touch area\r\n    backgroundColor: '#007AFF',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 10, // Matched border radius with inputs\r\n    marginBottom: 20,\r\n  },\r\n  loginButtonText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 20, // Increased font size\r\n    fontWeight: 'bold',\r\n  },\r\n  keepSessionContainer: {\r\n    flexDirection: 'row',\r\n    marginBottom: 20, // Increased space before sign up option\r\n  },\r\n  keepSessionText: {\r\n    color: '#007AFF',\r\n    fontSize: 16, // Adjusted font size for readability\r\n  },\r\n  signUpText: {\r\n    color: '#007AFF',\r\n    fontSize: 16, // Adjusted font size for readability\r\n    textDecorationLine: 'underline', // Added underline as is common for links\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,KAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQxC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC/B,IAAAC,SAAA,GAA0Bb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgClB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,aAAa,GAAG,SAAhBA,aAAaA,CAAIN,KAAK,EAAK;IAC/B,IAAMO,EAAE,GAAG,cAAc;IACzB,OAAOA,EAAE,CAACC,IAAI,CAACR,KAAK,CAAC;EACvB,CAAC;EAED,IAAMS,gBAAgB;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,WAAOX,KAAK,EAAEI,QAAQ,EAAK;MAClD,IAAI;QACF,IAAMQ,QAAQ,SAASC,KAAK,CAAC,6CAA6C,EAAE;UAC1EC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBlB,KAAK,EAAEA,KAAK;YACZI,QAAQ,EAAEA;UACZ,CAAC;QACH,CAAC,CAAC;QACF,IAAMe,IAAI,SAASP,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC,IAAIA,IAAI,CAACC,OAAO,EAAE;UAEhBxB,UAAU,CAACyB,QAAQ,CAAC,MAAM,CAAC;QAC7B,CAAC,MAAM;UAEL9B,KAAK,CAAC+B,KAAK,CAAC,cAAc,EAAEH,IAAI,CAACI,OAAO,IAAI,qBAAqB,CAAC;QACpE;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpCjC,KAAK,CAAC+B,KAAK,CAAC,aAAa,EAAE,iCAAiC,CAAC;MAC/D;IACF,CAAC;IAAA,gBAxBKb,gBAAgBA,CAAAiB,EAAA,EAAAC,GAAA;MAAA,OAAAjB,KAAA,CAAAkB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAwBrB;EAED,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAI,CAAC9B,KAAK,IAAI,CAACI,QAAQ,EAAE;MACvBb,KAAK,CAAC+B,KAAK,CAAC,OAAO,EAAE,2BAA2B,CAAC;MACjD;IACF;IACA,IAAI,CAAChB,aAAa,CAACN,KAAK,CAAC,EAAE;MACzBT,KAAK,CAAC+B,KAAK,CAAC,OAAO,EAAE,4BAA4B,CAAC;MAClD;IACF;IAEAb,gBAAgB,CAACT,KAAK,EAAEI,QAAQ,CAAC;EACnC,CAAC;EAED,OACEX,OAAA,CAACP,IAAI;IAAC6C,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BzC,OAAA,CAACH,KAAK;MAAC6C,MAAM,EAAEC,OAAO,CAAC,oBAAoB,CAAE;MAACL,KAAK,EAAEC,MAAM,CAACK;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC,EACpEjD,OAAA,CAACN,IAAI;MAAC4C,KAAK,EAAEC,MAAM,CAACW,OAAQ;MAAAT,QAAA,EAAC;IAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAM,CAAC,EACvCjD,OAAA,CAACN,IAAI;MAAC4C,KAAK,EAAEC,MAAM,CAACY,SAAU;MAAAV,QAAA,EAAC;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAM,CAAC,EAC3CjD,OAAA,CAACL,SAAS;MACR2C,KAAK,EAAEC,MAAM,CAACa,KAAM;MACpBC,WAAW,EAAC,QAAQ;MACpBC,oBAAoB,EAAC,SAAS;MAC9BC,KAAK,EAAEhD,KAAM;MACbiD,YAAY,EAAEhD;IAAS;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACxB,CAAC,EACFjD,OAAA,CAACL,SAAS;MACR2C,KAAK,EAAEC,MAAM,CAACa,KAAM;MACpBC,WAAW,EAAC,UAAU;MACtBC,oBAAoB,EAAC,SAAS;MAC9BG,eAAe;MACfF,KAAK,EAAE5C,QAAS;MAChB6C,YAAY,EAAE5C;IAAY;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAC3B,CAAC,EACFjD,OAAA,CAACJ,gBAAgB;MAAC0C,KAAK,EAAEC,MAAM,CAACmB,WAAY;MAACC,OAAO,EAAEtB,WAAY;MAAAI,QAAA,EAChEzC,OAAA,CAACN,IAAI;QAAC4C,KAAK,EAAEC,MAAM,CAACqB,eAAgB;QAAAnB,QAAA,EAAC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAM;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACjC,CAAC,EACnBjD,OAAA,CAACP,IAAI;MAAC6C,KAAK,EAAEC,MAAM,CAACsB,oBAAqB;MAAApB,QAAA,EACvCzC,OAAA,CAACJ,gBAAgB;QAAA6C,QAAA,EACfzC,OAAA,CAACN,IAAI;UAAC4C,KAAK,EAAEC,MAAM,CAACuB,eAAgB;UAAArB,QAAA,EAAC;QAAqB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAM;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACjD;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACf,CAAC,EACPjD,OAAA,CAACJ,gBAAgB;MAAA6C,QAAA,EACfzC,OAAA,CAACN,IAAI;QAAC4C,KAAK,EAAEC,MAAM,CAACwB,UAAW;QAACJ,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMxD,UAAU,CAACyB,QAAQ,CAAC,UAAU,CAAC;QAAA,CAAC;QAAAa,QAAA,EAAC;MAEhF;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAM;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACS,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACf,CAAC;AAEX,CAAC;AAED,IAAMV,MAAM,GAAG/C,UAAU,CAACwE,MAAM,CAAC;EAC/BxB,SAAS,EAAE;IACTyB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,iBAAiB,EAAE;EACrB,CAAC;EACDzB,IAAI,EAAE;IACJ0B,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE;EAChB,CAAC;EACDtB,OAAO,EAAE;IACPuB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE,SAAS;IAChBH,YAAY,EAAE;EAChB,CAAC;EACDrB,SAAS,EAAE;IACTsB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE,SAAS;IAChBH,YAAY,EAAE;EAChB,CAAC;EACDpB,KAAK,EAAE;IACLkB,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,EAAE;IACVK,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,EAAE;IAChBT,iBAAiB,EAAE,EAAE;IACrBG,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE;EACZ,CAAC;EACDf,WAAW,EAAE;IACXY,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,EAAE;IACVL,eAAe,EAAE,SAAS;IAC1BE,cAAc,EAAE,QAAQ;IACxBD,UAAU,EAAE,QAAQ;IACpBW,YAAY,EAAE,EAAE;IAChBN,YAAY,EAAE;EAChB,CAAC;EACDZ,eAAe,EAAE;IACfe,KAAK,EAAE,SAAS;IAChBF,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDb,oBAAoB,EAAE;IACpBkB,aAAa,EAAE,KAAK;IACpBP,YAAY,EAAE;EAChB,CAAC;EACDV,eAAe,EAAE;IACfa,KAAK,EAAE,SAAS;IAChBF,QAAQ,EAAE;EACZ,CAAC;EACDV,UAAU,EAAE;IACVY,KAAK,EAAE,SAAS;IAChBF,QAAQ,EAAE,EAAE;IACZO,kBAAkB,EAAE;EACtB;AACF,CAAC,CAAC;AAEF,eAAe/E,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}