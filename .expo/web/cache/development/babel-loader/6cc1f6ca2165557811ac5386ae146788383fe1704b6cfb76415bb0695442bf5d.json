{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar API_URL = 'http://localhost/geingeemu/public/api/login';\nexport var authenticateUser = function () {\n  var _ref = _asyncToGenerator(function* (email, password) {\n    try {\n      var response = yield fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n      if (!response.ok) {\n        var errorText = yield response.text();\n        console.error('HTTP error', response.status, errorText);\n        Alert.alert('Login Error', `Server responded with status: ${response.status}`);\n        return false;\n      }\n      var json = yield response.json();\n      if (json && json.token) {\n        yield AsyncStorage.setItem('userToken', json.token);\n        return true;\n      } else {\n        Alert.alert('Login Failed', json.message || 'Invalid credentials');\n        return false;\n      }\n    } catch (error) {\n      console.error('Login Error:', error);\n      Alert.alert('Login Error', 'Unable to connect to the server');\n      return false;\n    }\n  });\n  return function authenticateUser(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["AsyncStorage","API_URL","authenticateUser","_ref","_asyncToGenerator","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","console","error","status","Alert","alert","json","token","setItem","message","_x","_x2","apply","arguments"],"sources":["C:/xampp/htdocs/gamesaur/components/AuthService.tsx"],"sourcesContent":["import { Alert } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst API_URL = 'http://localhost/geingeemu/public/api/login';\r\n\r\nexport const authenticateUser = async (email, password) => {\r\n  try {\r\n    const response = await fetch(API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error('HTTP error', response.status, errorText);\r\n      Alert.alert('Login Error', `Server responded with status: ${response.status}`);\r\n      return false;\r\n    }\r\n\r\n    const json = await response.json();\r\n\r\n    if (json && json.token) {\r\n      await AsyncStorage.setItem('userToken', json.token);\r\n      return true;\r\n    } else {\r\n      Alert.alert('Login Failed', json.message || 'Invalid credentials');\r\n      return false;\r\n    }\r\n  } catch (error) {\r\n    console.error('Login Error:', error);\r\n    Alert.alert('Login Error', 'Unable to connect to the server');\r\n    return false;\r\n  }\r\n};\r\n"],"mappings":";;AACA,OAAOA,YAAY,MAAM,2CAA2C;AAEpE,IAAMC,OAAO,GAAG,6CAA6C;AAE7D,OAAO,IAAMC,gBAAgB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,KAAK,EAAEC,QAAQ,EAAK;IACzD,IAAI;MACF,IAAMC,QAAQ,SAASC,KAAK,CAACP,OAAO,EAAE;QACpCQ,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,KAAK,EAALA,KAAK;UAAEC,QAAQ,EAARA;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,IAAMC,SAAS,SAASR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvCC,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEX,QAAQ,CAACY,MAAM,EAAEJ,SAAS,CAAC;QACvDK,KAAK,CAACC,KAAK,CAAC,aAAa,EAAG,iCAAgCd,QAAQ,CAACY,MAAO,EAAC,CAAC;QAC9E,OAAO,KAAK;MACd;MAEA,IAAMG,IAAI,SAASf,QAAQ,CAACe,IAAI,CAAC,CAAC;MAElC,IAAIA,IAAI,IAAIA,IAAI,CAACC,KAAK,EAAE;QACtB,MAAMvB,YAAY,CAACwB,OAAO,CAAC,WAAW,EAAEF,IAAI,CAACC,KAAK,CAAC;QACnD,OAAO,IAAI;MACb,CAAC,MAAM;QACLH,KAAK,CAACC,KAAK,CAAC,cAAc,EAAEC,IAAI,CAACG,OAAO,IAAI,qBAAqB,CAAC;QAClE,OAAO,KAAK;MACd;IACF,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCE,KAAK,CAACC,KAAK,CAAC,aAAa,EAAE,iCAAiC,CAAC;MAC7D,OAAO,KAAK;IACd;EACF,CAAC;EAAA,gBA/BYnB,gBAAgBA,CAAAwB,EAAA,EAAAC,GAAA;IAAA,OAAAxB,IAAA,CAAAyB,KAAA,OAAAC,SAAA;EAAA;AAAA,GA+B5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}