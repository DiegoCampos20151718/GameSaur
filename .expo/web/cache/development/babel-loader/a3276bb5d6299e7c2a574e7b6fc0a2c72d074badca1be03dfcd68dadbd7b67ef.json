{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\gamesaur\\\\components\\\\ChatList.tsx\",\n  _this = this;\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ChatsScreen = function ChatsScreen(_ref) {\n  var userId = _ref.userId,\n    navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    chats = _useState2[0],\n    setChats = _useState2[1];\n  useEffect(function () {\n    var loadChats = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var response = yield axios.get(`http://localhost/geingeemu/public/api/loadchats/${userId}`);\n          setChats(response.data);\n        } catch (error) {\n          console.error('Error al cargar los chats:', error);\n        }\n      });\n      return function loadChats() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadChats();\n  }, [userId]);\n  var handleChatPress = function handleChatPress(chatId) {\n    navigation.navigate('ChatDetailScreen', {\n      chatId: chatId\n    });\n  };\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    return _jsxDEV(TouchableOpacity, {\n      onPress: function onPress() {\n        return handleChatPress(item.id);\n      },\n      children: _jsxDEV(View, {\n        style: {\n          padding: 10\n        },\n        children: [_jsxDEV(Text, {\n          children: [\"ID: \", item.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, _this), _jsxDEV(Text, {\n          children: [\"Fecha: \", item.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, _this);\n  };\n  return _jsxDEV(FlatList, {\n    data: chats,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    ListEmptyComponent: _jsxDEV(Text, {\n      children: \"No hay chats disponibles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 27\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, _this);\n};\nexport default ChatsScreen;","map":{"version":3,"names":["React","useEffect","useState","FlatList","Text","TouchableOpacity","View","axios","jsxDEV","_jsxDEV","ChatsScreen","_ref","userId","navigation","_useState","_useState2","_slicedToArray","chats","setChats","loadChats","_ref2","_asyncToGenerator","response","get","data","error","console","apply","arguments","handleChatPress","chatId","navigate","renderItem","_ref3","item","onPress","id","children","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","_this","date","keyExtractor","toString","ListEmptyComponent"],"sources":["C:/xampp/htdocs/gamesaur/components/ChatList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FlatList, Text, TouchableOpacity, View } from 'react-native';\r\nimport axios from 'axios';\r\n\r\ninterface Chat {\r\n  id: number;\r\n  date: string;\r\n}\r\n\r\nconst ChatsScreen: React.FC<{ userId: number; navigation: any }> = ({ userId, navigation }) => {\r\n  const [chats, setChats] = useState<Chat[]>([]);\r\n\r\n  useEffect(() => {\r\n    const loadChats = async () => {\r\n      try {\r\n        const response = await axios.get<Chat[]>(`http://localhost/geingeemu/public/api/loadchats/${userId}`);\r\n        setChats(response.data);\r\n      } catch (error) {\r\n        console.error('Error al cargar los chats:', error);\r\n      }\r\n    };\r\n\r\n    loadChats();\r\n  }, [userId]);\r\n\r\n  const handleChatPress = (chatId: number) => {\r\n    // Redirigir a la pantalla de detalle de chat con el ID del chat seleccionado\r\n    navigation.navigate('ChatDetailScreen', { chatId });\r\n  };\r\n\r\n  const renderItem = ({ item }: { item: Chat }) => (\r\n    <TouchableOpacity onPress={() => handleChatPress(item.id)}>\r\n      <View style={{ padding: 10 }}>\r\n        <Text>ID: {item.id}</Text>\r\n        <Text>Fecha: {item.date}</Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  return (\r\n    <FlatList\r\n      data={chats}\r\n      renderItem={renderItem}\r\n      keyExtractor={(item) => item.id.toString()}\r\n      ListEmptyComponent={<Text>No hay chats disponibles</Text>}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChatsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}