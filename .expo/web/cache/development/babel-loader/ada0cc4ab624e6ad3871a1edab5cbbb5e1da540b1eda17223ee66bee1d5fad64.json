{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\gamesaur\\\\components\\\\ChatList.tsx\",\n  _this = this;\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useToken } from './AuthService';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport ChatDetailScreen from './Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Stack = createStackNavigator();\nvar ChatList = function ChatList(_ref) {\n  var navigation = _ref.navigation;\n  var token = useToken();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    chats = _useState2[0],\n    setChats = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    users = _useState6[0],\n    setUsers = _useState6[1];\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    games = _useState8[0],\n    setGames = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    userId = _useState10[0],\n    setUserId = _useState10[1];\n  useEffect(function () {\n    var fetchChats = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          setLoading(true);\n          var storedUserId = yield AsyncStorage.getItem('userId');\n          setUserId(storedUserId);\n          if (storedUserId) {\n            var _userId = BigInt(storedUserId);\n            var response = yield axios.get(`http://localhost/geingeemu/public/api/loadchats/${_userId}`, {\n              headers: {\n                'Authorization': `Bearer ${token}`\n              }\n            });\n            setChats(response.data);\n            var user1Requests = response.data.map(function (chat) {\n              return axios.get(`http://localhost/geingeemu/public/api/userview/${chat.id_user1}`);\n            });\n            var usersData1 = yield Promise.all(user1Requests);\n            var user1Names = usersData1.map(function (userResponse) {\n              return userResponse.data;\n            });\n            var user2Requests = response.data.map(function (chat) {\n              return axios.get(`http://localhost/geingeemu/public/api/userview/${chat.id_user2}`);\n            });\n            var usersData2 = yield Promise.all(user2Requests);\n            var user2Names = usersData2.map(function (userResponse) {\n              return userResponse.data;\n            });\n            var combinedUsers = response.data.map(function (chat, index) {\n              var _user1Names$index, _user1Names$index2, _user2Names$index, _user2Names$index2;\n              return {\n                id: chat.id,\n                firstname1: (_user1Names$index = user1Names[index]) == null ? void 0 : _user1Names$index.firstname,\n                lastname1: (_user1Names$index2 = user1Names[index]) == null ? void 0 : _user1Names$index2.lastname,\n                firstname2: (_user2Names$index = user2Names[index]) == null ? void 0 : _user2Names$index.firstname,\n                lastname2: (_user2Names$index2 = user2Names[index]) == null ? void 0 : _user2Names$index2.lastname\n              };\n            });\n            setUsers(combinedUsers);\n            var gameRequests = response.data.map(function (chat) {\n              return axios.get(`http://localhost/geingeemu/public/api/ampp/${chat.id_videogame}`);\n            });\n            var gamesData = yield Promise.all(gameRequests);\n            var gameNames = gamesData.reduce(function (acc, gameResponse) {\n              acc[gameResponse.data.id] = gameResponse.data.name;\n              return acc;\n            }, {});\n            setGames(gameNames);\n          }\n        } catch (error) {\n          console.error('Error al cargar los chats:', error);\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function fetchChats() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchChats();\n  }, [token]);\n  var navigateToChatDetail = function navigateToChatDetail(chatId) {\n    navigation.navigate('ChatDetails', {\n      chatId: chatId\n    });\n  };\n  var renderCard = function renderCard(_ref3) {\n    var _users$index, _users$index2, _users$index3, _users$index4;\n    var item = _ref3.item,\n      index = _ref3.index;\n    return _jsxDEV(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigateToChatDetail(item.id);\n      },\n      children: _jsxDEV(View, {\n        style: styles.card,\n        children: [_jsxDEV(Text, {\n          style: styles.cardText,\n          children: [\"ID: \", item.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, _this), !userId || item.id_user1.toString() !== userId ? _jsxDEV(Text, {\n          style: styles.cardText,\n          children: [\"User 2: \", (_users$index = users[index]) == null ? void 0 : _users$index.firstname2, \" \", (_users$index2 = users[index]) == null ? void 0 : _users$index2.lastname2]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, _this) : _jsxDEV(Text, {\n          style: styles.cardText,\n          children: [\"User 1: \", (_users$index3 = users[index]) == null ? void 0 : _users$index3.firstname1, \" \", (_users$index4 = users[index]) == null ? void 0 : _users$index4.lastname1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, _this), _jsxDEV(Text, {\n          style: styles.cardText,\n          children: [\"Videojuego: \", games[item.id_videogame]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, _this), _jsxDEV(Text, {\n          style: styles.cardText,\n          children: [\"Fecha: \", item.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, _this);\n  };\n  if (loading) {\n    return _jsxDEV(Text, {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }, _this);\n  }\n  return _jsxDEV(ScrollView, {\n    children: _jsxDEV(FlatList, {\n      data: chats,\n      renderItem: renderCard,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, _this);\n};\nvar ChatScreen = function ChatScreen() {\n  return _jsxDEV(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsxDEV(Stack.Screen, {\n      name: \"Chats\",\n      component: ChatList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, _this), _jsxDEV(Stack.Screen, {\n      name: \"ChatDetails\",\n      component: ChatDetailScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  card: {\n    backgroundColor: '#ffffff',\n    borderRadius: 8,\n    padding: 16,\n    marginTop: 16,\n    marginHorizontal: 16,\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  cardText: {\n    fontSize: 16,\n    marginBottom: 8\n  }\n});\nexport default ChatScreen;","map":{"version":3,"names":["React","useEffect","useState","FlatList","Text","View","TouchableOpacity","StyleSheet","ScrollView","axios","AsyncStorage","useToken","createStackNavigator","ChatDetailScreen","jsxDEV","_jsxDEV","Stack","ChatList","_ref","navigation","token","_useState","_useState2","_slicedToArray","chats","setChats","_useState3","_useState4","loading","setLoading","_useState5","_useState6","users","setUsers","_useState7","_useState8","games","setGames","_useState9","_useState10","userId","setUserId","fetchChats","_ref2","_asyncToGenerator","storedUserId","getItem","BigInt","response","get","headers","data","user1Requests","map","chat","id_user1","usersData1","Promise","all","user1Names","userResponse","user2Requests","id_user2","usersData2","user2Names","combinedUsers","index","_user1Names$index","_user1Names$index2","_user2Names$index","_user2Names$index2","id","firstname1","firstname","lastname1","lastname","firstname2","lastname2","gameRequests","id_videogame","gamesData","gameNames","reduce","acc","gameResponse","name","error","console","apply","arguments","navigateToChatDetail","chatId","navigate","renderCard","_ref3","_users$index","_users$index2","_users$index3","_users$index4","item","onPress","children","style","styles","card","cardText","fileName","_jsxFileName","lineNumber","columnNumber","_this","toString","date","renderItem","keyExtractor","ChatScreen","Navigator","screenOptions","headerShown","Screen","component","create","backgroundColor","borderRadius","padding","marginTop","marginHorizontal","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontSize","marginBottom"],"sources":["C:/xampp/htdocs/gamesaur/components/ChatList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FlatList, Text, View, TouchableOpacity, StyleSheet, ScrollView } from 'react-native';\r\nimport axios from 'axios';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useToken } from './AuthService';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport ChatDetailScreen from './Chat';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\ninterface Chat {\r\n  id: number;\r\n  id_user1: number;\r\n  id_user2: number;\r\n  id_videogame: number;\r\n  chat: string;\r\n  date: string;\r\n}\r\n\r\ninterface User {\r\n  id: number;\r\n  firstname: string;\r\n  lastname: string;\r\n}\r\n\r\nconst ChatList: React.FC = ({ navigation }) => {\r\n  const token = useToken();\r\n  const [chats, setChats] = useState<Chat[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [games, setGames] = useState<{ [id: number]: string }>({});\r\n  const [userId, setUserId] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchChats = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const storedUserId = await AsyncStorage.getItem('userId');\r\n        setUserId(storedUserId);\r\n        if (storedUserId) {\r\n          const userId = BigInt(storedUserId);\r\n          const response = await axios.get<Chat[]>(`http://localhost/geingeemu/public/api/loadchats/${userId}`, {\r\n            headers: { 'Authorization': `Bearer ${token}` },\r\n          });\r\n          setChats(response.data);\r\n\r\n          // Obtener los nombres de usuario para id_user1\r\n          const user1Requests = response.data.map(chat => axios.get<User>(`http://localhost/geingeemu/public/api/userview/${chat.id_user1}`));\r\n          const usersData1 = await Promise.all(user1Requests);\r\n          const user1Names = usersData1.map(userResponse => userResponse.data);\r\n\r\n          // Obtener los nombres de usuario para id_user2\r\n          const user2Requests = response.data.map(chat => axios.get<User>(`http://localhost/geingeemu/public/api/userview/${chat.id_user2}`));\r\n          const usersData2 = await Promise.all(user2Requests);\r\n          const user2Names = usersData2.map(userResponse => userResponse.data);\r\n\r\n          // Combinar nombres de usuario\r\n          const combinedUsers = response.data.map((chat, index) => ({\r\n            id: chat.id,\r\n            firstname1: user1Names[index]?.firstname,\r\n            lastname1: user1Names[index]?.lastname,\r\n            firstname2: user2Names[index]?.firstname,\r\n            lastname2: user2Names[index]?.lastname,\r\n          }));\r\n\r\n          setUsers(combinedUsers);\r\n\r\n          // Obtener los nombres de videojuego para id_videogame\r\n          const gameRequests = response.data.map(chat => axios.get<{ name: string }>(`http://localhost/geingeemu/public/api/ampp/${chat.id_videogame}`));\r\n          const gamesData = await Promise.all(gameRequests);\r\n          const gameNames = gamesData.reduce((acc, gameResponse) => {\r\n            acc[gameResponse.data.id] = gameResponse.data.name;\r\n            return acc;\r\n          }, {} as { [id: number]: string });\r\n\r\n          setGames(gameNames);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al cargar los chats:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchChats();\r\n  }, [token]);\r\n\r\n  const navigateToChatDetail = (chatId: number) => {\r\n    navigation.navigate('ChatDetails', { chatId });\r\n  };\r\n\r\n  const renderCard = ({ item, index }: { item: Chat; index: number }) => (\r\n    <TouchableOpacity onPress={() => navigateToChatDetail(item.id)}>\r\n      <View style={styles.card}>\r\n        <Text style={styles.cardText}>ID: {item.id}</Text>\r\n        {!userId || item.id_user1.toString() !== userId ? (\r\n          <Text style={styles.cardText}>User 2: {users[index]?.firstname2} {users[index]?.lastname2}</Text>\r\n        ) : <Text style={styles.cardText}>User 1: {users[index]?.firstname1} {users[index]?.lastname1}</Text> }\r\n        <Text style={styles.cardText}>Videojuego: {games[item.id_videogame]}</Text>\r\n        <Text style={styles.cardText}>Fecha: {item.date}</Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  if (loading) {\r\n    return <Text>Cargando...</Text>;\r\n  }\r\n\r\n  return (\r\n    <ScrollView>\r\n      <FlatList\r\n        data={chats}\r\n        renderItem={renderCard}\r\n        keyExtractor={(item) => item.id.toString()}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst ChatScreen = () => {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerShown: false\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"Chats\" component={ChatList} />\r\n      <Stack.Screen name=\"ChatDetails\" component={ChatDetailScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    marginTop: 16,\r\n    marginHorizontal: 16,\r\n    shadowColor: '#000000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  cardText: {\r\n    fontSize: 16,\r\n    marginBottom: 8,\r\n  },\r\n});\r\n\r\nexport default ChatScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}