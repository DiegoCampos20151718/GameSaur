{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\diego\\\\OneDrive\\\\Documentos\\\\Program y Carp\\\\Proyectos Ap\\\\gamesaur-1\\\\components\\\\ThemeContext.tsx\",\n  _this = this;\nimport React, { createContext, useState, useContext } from 'react';\nimport { DarkTheme, DefaultTheme } from 'react-native-paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ThemeContext = createContext({\n  theme: DefaultTheme,\n  toggleTheme: function toggleTheme() {}\n});\nexport var ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(DefaultTheme),\n    _useState2 = _slicedToArray(_useState, 2),\n    theme = _useState2[0],\n    setTheme = _useState2[1];\n  var toggleTheme = function toggleTheme() {\n    setTheme(function (theme) {\n      return theme === DefaultTheme ? DarkTheme : DefaultTheme;\n    });\n  };\n  return _jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      toggleTheme: toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\nexport var useTheme = function useTheme() {\n  return useContext(ThemeContext);\n};","map":{"version":3,"names":["React","createContext","useState","useContext","DarkTheme","DefaultTheme","jsxDEV","_jsxDEV","ThemeContext","theme","toggleTheme","ThemeProvider","_ref","children","_useState","_useState2","_slicedToArray","setTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_this","useTheme"],"sources":["C:/Users/diego/OneDrive/Documentos/Program y Carp/Proyectos Ap/gamesaur-1/components/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode } from 'react';\r\nimport { DarkTheme, DefaultTheme, Theme } from 'react-native-paper';\r\n\r\ntype ThemeContextType = {\r\n  theme: Theme;\r\n  toggleTheme: () => void;\r\n};\r\n\r\nconst ThemeContext = createContext<ThemeContextType>({\r\n  theme: DefaultTheme,\r\n  toggleTheme: () => {},\r\n});\r\n\r\ntype ThemeProviderProps = {\r\n  children: ReactNode;\r\n};\r\n\r\nexport const ThemeProvider = ({ children }: ThemeProviderProps) => {\r\n  const [theme, setTheme] = useState<Theme>(DefaultTheme);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(theme => theme === DefaultTheme ? DarkTheme : DefaultTheme);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAmB,OAAO;AAC7E,SAASC,SAAS,EAAEC,YAAY,QAAe,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOpE,IAAMC,YAAY,GAAGP,aAAa,CAAmB;EACnDQ,KAAK,EAAEJ,YAAY;EACnBK,WAAW,EAAE,SAAAA,YAAA,EAAM,CAAC;AACtB,CAAC,CAAC;AAMF,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAyC;EAAA,IAAnCC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACtC,IAAAC,SAAA,GAA0BZ,QAAQ,CAAQG,YAAY,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhDL,KAAK,GAAAM,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtB,IAAML,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBO,QAAQ,CAAC,UAAAR,KAAK;MAAA,OAAIA,KAAK,KAAKJ,YAAY,GAAGD,SAAS,GAAGC,YAAY;IAAA,EAAC;EACtE,CAAC;EAED,OACEE,OAAA,CAACC,YAAY,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEV,KAAK,EAALA,KAAK;MAAEC,WAAW,EAAXA;IAAY,CAAE;IAAAG,QAAA,EAClDA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACY,CAAC;AAE5B,CAAC;AAED,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA;EAAA,OAAStB,UAAU,CAACK,YAAY,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}