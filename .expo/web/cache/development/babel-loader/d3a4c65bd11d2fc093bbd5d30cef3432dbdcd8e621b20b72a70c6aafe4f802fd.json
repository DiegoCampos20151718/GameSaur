{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\gamesaur\\\\components\\\\AuthService.tsx\",\n  _this = this;\nimport React, { createContext, useContext, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar AuthContext = createContext();\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    token = _useState4[0],\n    setToken = _useState4[1];\n  var login = function () {\n    var _ref2 = _asyncToGenerator(function* (TokenData) {\n      yield AsyncStorage.setItem('authToken', TokenData);\n      setToken(TokenData);\n      setIsLoggedIn(true);\n    });\n    return function login(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      yield AsyncStorage.removeItem('authToken');\n      setIsLoggedIn(false);\n      setToken('');\n    });\n    return function logout() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      login: login,\n      logout: logout,\n      token: token\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\nexport var useAuth = function useAuth() {\n  return useContext(AuthContext);\n};\nexport var useToken = function useToken() {\n  return useContext(AuthContext).token;\n};\nexport var AuthService = function () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n  }\n  _createClass(AuthService, null, [{\n    key: \"setToken\",\n    value: function () {\n      var _setToken = _asyncToGenerator(function* (token) {\n        yield AsyncStorage.setItem('authToken', token);\n      });\n      function setToken(_x2) {\n        return _setToken.apply(this, arguments);\n      }\n      return setToken;\n    }()\n  }, {\n    key: \"getToken\",\n    value: function () {\n      var _getToken = _asyncToGenerator(function* () {\n        return yield AsyncStorage.getItem('authToken');\n      });\n      function getToken() {\n        return _getToken.apply(this, arguments);\n      }\n      return getToken;\n    }()\n  }, {\n    key: \"removeToken\",\n    value: function () {\n      var _removeToken = _asyncToGenerator(function* () {\n        yield AsyncStorage.removeItem('authToken');\n      });\n      function removeToken() {\n        return _removeToken.apply(this, arguments);\n      }\n      return removeToken;\n    }()\n  }]);\n  return AuthService;\n}();\nexport default AuthService;","map":{"version":3,"names":["React","createContext","useContext","useState","AsyncStorage","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","_useState3","_useState4","token","setToken","login","_ref2","_asyncToGenerator","TokenData","setItem","_x","apply","arguments","logout","_ref3","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_this","useAuth","useToken","AuthService","_classCallCheck","_createClass","key","_setToken","_x2","_getToken","getItem","getToken","_removeToken","removeToken"],"sources":["C:/xampp/htdocs/gamesaur/components/AuthService.tsx"],"sourcesContent":["// AuthService.jsx\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [token, setToken] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const bootstrapAsync = async () => {\r\n//       let userToken;\r\n//       try {\r\n//         userToken = await AsyncStorage.getItem('authToken');\r\n//       } catch (e) {\r\n//         // Restaurar token fallÃ³\r\n//       }\r\n//       setIsLoggedIn(!!userToken);\r\n//       setToken(userToken);\r\n//     };\r\n\r\n//     bootstrapAsync();\r\n//   }, []);\r\n\r\n  const login = async (TokenData) => {\r\n    await AsyncStorage.setItem('authToken', TokenData);\r\n    setToken(TokenData);\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const logout = async () => {\r\n    await AsyncStorage.removeItem('authToken');\r\n    setIsLoggedIn(false);\r\n    setToken('');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn, login, logout, token }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const useToken = () => {\r\n  return useContext(AuthContext).token;\r\n};\r\n\r\n// AuthService.js (Separate file if necessary or you can include these methods in AuthService.jsx)\r\nexport class AuthService {\r\n  static async setToken(token) {\r\n    await AsyncStorage.setItem('authToken', token);\r\n  }\r\n\r\n  static async getToken() {\r\n    return await AsyncStorage.getItem('authToken');\r\n  }\r\n\r\n  static async removeToken() {\r\n    await AsyncStorage.removeItem('authToken');\r\n  }\r\n}\r\n\r\nexport default AuthService;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}